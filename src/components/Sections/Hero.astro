---
import type { GetStaticPaths } from "astro";
import { basics } from "../../../cv.json"
import Mail from "../../icons/Mail.astro"
import Section from "../Section.astro"
import Phone from "../../icons/Phone.astro"
import GitHub from "../../icons/GitHub.astro"
import LinkedIn from "../../icons/LinkedIn.astro"
import X from "../../icons/X.astro"
import WorldMap from "../../icons/WorldMap.astro"

const {name, label, location, profiles, phone, image, email} = basics
const {city, region} = location

const SOCIAL_ICONS: Record<string, any> = {
    GitHub,
    LinkedIn,
    X
}

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn")
const linkedUrl = linkedInfo?.url

const printInfo = [email, phone, linkedUrl].filter(Boolean).join(" • ")


const { currentLocale } = Astro

let email_t = currentLocale === 'es' ? `Enviar un corre electronico a ${name} al corre ${email}` : `Send tmail to ${name} at ${email}`;
let phone_t = currentLocale === 'es' ? `Llamar por teléfono a ${name} al número ${phone}` : `call ${name} at ${phone}`
---


<Section>
    <div class="container">
        <div class="info">
        <h1>{name}</h1>
        <h2>{label}</h2>
        <span>
            <WorldMap />
            {city}, {region}
        </span>
        <footer class="print">
            {printInfo}
        </footer>
        <footer class="no-print">
            {
                email &&(
                    <a 
                    href={'mailto:${email}'}
                    title={email_t}
                    target="_blank"
                    rel="noopener noreferrer"
                    >
                    <Mail />
                    </a>
                )
            }
            {
                phone && (
                  <a
                    href={`tel:${phone}`}
                    title={phone_t}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <Phone />
                  </a>
                )
            }
            {
                profiles.map(({ network, url, username }) => {
                  const Icon = SOCIAL_ICONS[network]
                    
                  let perfil_t = currentLocale === 'es' ? `Visitar el perfil de ${name} en ${network}` : `Visit profile of ${name} on ${network}`;

                  return (
                    <a
                      href={url}
                      title={perfil_t}
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <Icon />
                    </a>
                  )
                })
              }
        </footer>
    </div>
    <figure>
        <img src={image} alt={name} />
    </figure>
</Section>

<style>

    .container{
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
    }

    .info {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        padding-right: 32px;
    }

    h1{
        font-size: 2rem;
        color: var(--h1-primary);
    }

    h2{
        color: var(--h2--primary);
        font-weight: 500;
        font-size: 1.3rem;
        text-wrap: balance;
    }

    img {
        aspect-ratio: 1 / 1;
        object-fit: cover;
        width: 128px;
        border-radius: 16px;
    }

    span {
        color: var(--span-secondary);
        display: flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.87rem;
        letter-spacing: -0.05rem;
    }

    footer {
        color: var(--color-footer);
        font-size: 0.65rem;
        display: flex;
        gap: 4px;
        margin-top: 8px;
    }

    footer a {
        color: var(--color-footer-a);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border: 1px solid var(--color-footer-a-border);
        padding: 4px;
        height: 32px;
        width: 32px;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

    footer a:hover {
        background: var(--background--a--hover);
        border: 1px solid var(--border--a--hover);
    }

    .print{
        display: none;
    }

    @media print{
        .print{
            display: block;
        }
    }

    @media print {
        .no-print{
            display: none;
        }
    }


    :root{
    /*Hero*/
    --h2--primary: #444; /* Color primario para h2 */
    --span-secondary: #666; /* Color secundario para span */
    --color-footer: #555; /* Color para el footer Hero */
    --color-footer-a:#777;  /* Color para enlaces */
    --color-footer-a-border:#eee; /*color para borde de enlaces*/
    --background--a--hover:#eee; /* Color de fondo al pasar el ratón links*/
    --border--a--hover:#ddd; /* Color del borde al pasar el ratón links*/
    }

    :root[data-theme="dark"]{
    /*Hero*/
    --h1-primary:#ffdead;
    --h2--primary: #ccc; /* Color primario para h2 */
    --span-secondary: #ffdead; /* Color secundario para span */
    --color-footer: #aaa; /* Color para el footer Hero */
    --color-footer-a: #ffdead; /* Color para enlaces */
    --color-footer-a-border: #444; /* color para borde de enlaces */
    --background--a--hover: #444; /* Color de fondo al pasar el ratón links */
    --border--a--hover: #666; /* Color del borde al pasar el ratón links */
    }
</style>

